# Generated by Django 5.1.1 on 2024-10-03 23:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Conversation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "context",
                    models.TextField(
                        blank=True,
                        help_text="Any additional context for the conversation",
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        help_text="Custom tags for categorizing conversations",
                        null=True,
                    ),
                ),
                (
                    "user_feedback",
                    models.IntegerField(
                        blank=True,
                        help_text="User rating for the conversation (e.g., 1-5)",
                        null=True,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                (
                    "message_type",
                    models.CharField(
                        choices=[("USER", "User"), ("ASSISTANT", "Assistant")],
                        max_length=10,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("is_answer", models.BooleanField(default=False)),
                (
                    "tokens",
                    models.IntegerField(
                        help_text="Number of tokens in the message", null=True
                    ),
                ),
                (
                    "sentiment",
                    models.FloatField(
                        help_text="Sentiment score of the message", null=True
                    ),
                ),
                (
                    "entities",
                    models.JSONField(
                        blank=True,
                        help_text="Named entities extracted from the message",
                        null=True,
                    ),
                ),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="core.conversation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PerformanceMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("metric_name", models.CharField(max_length=100)),
                ("metric_value", models.FloatField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_metrics",
                        to="core.conversation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SystemPrompt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assistant_type",
                    models.CharField(
                        choices=[
                            ("STUDY", "Study Assistant"),
                            ("COURSE", "Course Generator"),
                        ],
                        max_length=10,
                    ),
                ),
                ("version", models.CharField(max_length=50)),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=False)),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Brief description of changes in this version",
                    ),
                ),
                (
                    "performance_metrics",
                    models.JSONField(
                        blank=True,
                        help_text="Stores performance metrics for this prompt",
                        null=True,
                    ),
                ),
            ],
            options={
                "unique_together": {("assistant_type", "version")},
            },
        ),
        migrations.AddField(
            model_name="conversation",
            name="system_prompt",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="core.systemprompt"
            ),
        ),
        migrations.CreateModel(
            name="AIResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ai_type",
                    models.CharField(
                        choices=[("LOCAL", "Local Model"), ("CLAUDE", "Claude Model")],
                        max_length=10,
                    ),
                ),
                ("attempt_number", models.PositiveSmallIntegerField()),
                ("response_content", models.TextField()),
                ("is_final_answer", models.BooleanField(default=False)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "processing_time",
                    models.FloatField(
                        help_text="Time taken to generate the response in seconds",
                        null=True,
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        help_text="Model's confidence in the response", null=True
                    ),
                ),
                (
                    "used_resources",
                    models.JSONField(
                        blank=True,
                        help_text="Resources or knowledge bases used for the response",
                        null=True,
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_responses",
                        to="core.message",
                    ),
                ),
            ],
            options={
                "unique_together": {("message", "ai_type", "attempt_number")},
            },
        ),
    ]
